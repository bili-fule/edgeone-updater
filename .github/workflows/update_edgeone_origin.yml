# .github/workflows/api_triggered_modifier.yml

name: API Triggered TEO Domain Modifier

on:
  repository_dispatch:
    types: [modify-teo-domain]

jobs:
  modify-teo-domain-via-api:
    runs-on: ubuntu-latest
    
    env:
      TENCENTCLOUD_SECRET_ID: ${{ secrets.TENCENTCLOUD_SECRET_ID }}
      TENCENTCLOUD_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SECRET_KEY }}

    steps:
    - name: Print received payload
      run: |
        echo "Received payload from the API request:"
        echo "${{ toJSON(github.event.client_payload) }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # --- 这里是修正后的步骤，请确保你的文件和这里完全一样 ---
    - name: Install Tencent Cloud CLI
      run: pip install tccli

    - name: Construct and Run tccli command
      run: |
        # 基础命令
        CMD="tccli teo ModifyAccelerationDomain --Version 2022-09-01"
        
        # 从 client_payload 中获取参数
        ZONE_ID="${{ github.event.client_payload.zone_id }}"
        DOMAIN_NAME="${{ github.event.client_payload.domain_name }}"
        ORIGIN_SERVER="${{ github.event.client_payload.origin_server }}"
        ORIGIN_PROTOCOL="${{ github.event.client_payload.origin_protocol }}"
        HTTP_PORT="${{ github.event.client_payload.http_origin_port }}"
        HTTPS_PORT="${{ github.event.client_payload.https_origin_port }}"
        IPV6_STATUS="${{ github.event.client_payload.ipv6_status }}"
        REGION="${{ github.event.client_payload.region }}"

        # 检查必填参数是否存在
        if [ -z "$ZONE_ID" ] || [ -z "$DOMAIN_NAME" ]; then
          echo "Error: 'zone_id' and 'domain_name' are required in the payload."
          exit 1
        fi
        
        # 添加必填参数
        CMD+=" --ZoneId '$ZONE_ID'"
        CMD+=" --DomainName '$DOMAIN_NAME'"

        # 根据传入的 payload，动态添加可选参数
        if [ -n "$ORIGIN_SERVER" ]; then
          ORIGIN_INFO_JSON="{\"OriginType\":\"ip_domain\",\"Origin\":\"$ORIGIN_SERVER\"}"
          CMD+=" --OriginInfo '$ORIGIN_INFO_JSON'"
        fi

        if [ -n "$ORIGIN_PROTOCOL" ]; then
          CMD+=" --OriginProtocol '$ORIGIN_PROTOCOL'"
        fi
        
        if [ -n "$HTTP_PORT" ]; then
          CMD+=" --HttpOriginPort $HTTP_PORT"
        fi

        if [ -n "$HTTPS_PORT" ]; then
          CMD+=" --HttpsOriginPort $HTTPS_PORT"
        fi
        
        if [ -n "$IPV6_STATUS" ]; then
          CMD+=" --IPv6Status '$IPV6_STATUS'"
        fi

        if [ -n "$REGION" ]; then
          CMD+=" --Region '$REGION'"
        fi
        
        echo "🚀 Executing command..."
        echo "$CMD" # 打印最终执行的命令，方便调试
        
        # 执行命令
        eval $CMD